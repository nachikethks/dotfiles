# ~/.config/starship.toml
palette = 'catppuccin'
format = '''$giturl$directory$git_branch$git_state$git_status$status$fill$custom$all$character'''

[palettes.catppuccin]
rosewater = "#f5e0dc"
flamingo = "#f2cdcd"
pink = "#f5c2e7"
mauve = "#cba6f7"
red = "#f38ba8"
maroon = "#eba0ac"
peach = "#fab387"
yellow = "#f9e2af"
green = "#a6e3a1"
teal = "#94e2d5"
sky = "#89dceb"
sapphire = "#74c7ec"
blue = "#89b4fa"
lavender = "#b4befe"

[character]
format = "$symbol($style) "
success_symbol = "[❯](bold green)"
error_symbol = "[❯](bold red)"
vimcmd_symbol = "[](bold blue)"
vimcmd_replace_one_symbol = "[](bold red)"
vimcmd_replace_symbol = "[](bold red)"
vimcmd_visual_symbol = "[](bold mauve)"


[docker_context]
disabled = false

[conda]
disabled = false
format = 'via [$symbol$environment]($style) '

[cmd_duration]
disabled = false
min_time = 5000

[fill]
symbol = " "

[directory]
format = " [$path]($style)[$read_only]($read_only_style) "
style = "bold green"
read_only = "  "

[git_branch]
symbol = " "
format = "[$symbol$branch]($style) "
style = "bold yellow"

[git_status]
format = "$all_status($style) "

conflicted = "[ conflicted ](bold red)"  
ahead = "[ ahead ${count} ](bold yellow)"        
behind = "[ behind ${count} ](bold mauve)"      
untracked = "[ ](bold blue)"
stashed = "[ ](bold sky)"    
modified = "[ ](bold peach)"
staged = "[ ](bold green)"   
renamed = "[ ](bold lavender)"
deleted = "[✘ ](bold red)"    
diverged = '[ diverged ${ahead_count} ${behind_count}](bold red)'

[memory_usage]
disabled = false
threshold = 90
symbol = '󰍛'
style = 'bold dimmed red'
format = '$symbol [${ram}]($style) '

[git_state]
disabled = false
format = '\([$state( [$progress_current/$progress_total](bold green))]($style)\) '

[status]
disabled = false
format = '[$signal_name $common_meaning]($style) '

[sudo]
disabled = false
symbol = "👽 "

[time]
disabled = true

[package]
disabled = true

[nodejs]
disabled = true

[rust]
disabled = true

[python]
disabled = true

[lua]
disabled = true

[custom.giturl]
# disabled = true
description = "Display symbol for remote Git server and repo name"
command = """
#!/usr/bin/env bash
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
REPO_NAME=$(basename "$(git rev-parse --show-toplevel 2> /dev/null)")

if [[ "$GIT_REMOTE" =~ github ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ gitlab ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ bitbucket ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ git ]]; then
    GIT_REMOTE_SYMBOL=" "
else
    GIT_REMOTE_SYMBOL=" "
fi

if [ -n "$REPO_NAME" ]; then
    echo "$GIT_REMOTE_SYMBOL$REPO_NAME"
else
    echo "$GIT_REMOTE_SYMBOL"
fi
"""
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
shell = ["bash", "--noprofile", "--norc"]
format = " $output "

